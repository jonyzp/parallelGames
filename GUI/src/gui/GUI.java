/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import javax.swing.JOptionPane;

/**
 *
 * @author mateo
 */
public class GUI extends javax.swing.JFrame {

    private String selectedMethod = "";
    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }
    
    public BufferedReader[] executeCommand(String file, String args){

        BufferedReader stdOutput = null;
        BufferedReader stdError = null;
        try {
            
	    // run the Unix "ps -ef" command
            // using the Runtime exec method:
            String ruta = "C:\\Users\\JONATHAN\\Documents\\Universidad\\Universidad_2017-2\\Analisis_Numerico\\Investigacion_en_computacion_en_paralelo\\RepoProyectoFinal\\parallelGames\\InterfaceMethodsPython\\";
            String ruta_args = "python " + ruta+file+" " + ruta + "matrix.txt "+args;
            Process p = Runtime.getRuntime().exec(ruta_args);
            
            stdOutput = new BufferedReader(new 
                 InputStreamReader(p.getInputStream()));

            stdError = new BufferedReader(new 
                 InputStreamReader(p.getErrorStream()));
            
            //System.exit(0);
        }
        catch (IOException e) {
            System.out.println("exception happened - here's what I know: ");
            e.printStackTrace();
            System.exit(-1);
        }
        
        BufferedReader[] std = {stdOutput, stdError};
        
        return std;
    }
    
    void executeCmnd(String command){
        try {
            ProcessBuilder builder = new ProcessBuilder(command);
            Process process = builder.start();
            InputStream inputStream = process.getInputStream();
            BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream), 1);
            String line;
            while ((line = bufferedReader.readLine()) != null) {
                System.out.println(line);
            }
            inputStream.close();
            bufferedReader.close();
        } catch (Exception ioe) {
            ioe.printStackTrace();
            System.out.println(ioe.toString());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnExecCholesky = new javax.swing.JButton();
        btnExecute = new javax.swing.JButton();
        btnJacobi = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtTolerance = new javax.swing.JTextField();
        txtMaxIterations = new javax.swing.JTextField();
        btnExecCrout = new javax.swing.JButton();
        btnExecDooLittle = new javax.swing.JButton();
        btnExecGauss = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnExecCholesky.setText("Select Lu Cholesky");
        btnExecCholesky.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExecCholeskyActionPerformed(evt);
            }
        });

        btnExecute.setText("Execute");
        btnExecute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExecuteActionPerformed(evt);
            }
        });

        btnJacobi.setText("Select Jacobi");
        btnJacobi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnJacobiActionPerformed(evt);
            }
        });

        jLabel1.setText("Tolerance");

        jLabel2.setText("Max Iterations");

        txtTolerance.setEnabled(false);

        txtMaxIterations.setEnabled(false);

        btnExecCrout.setText("Select Lu Crout");
        btnExecCrout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExecCroutActionPerformed(evt);
            }
        });

        btnExecDooLittle.setText("Select Lu DooLittle");
        btnExecDooLittle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExecDooLittleActionPerformed(evt);
            }
        });

        btnExecGauss.setText("Select Gauss");
        btnExecGauss.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExecGaussActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnExecute)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtMaxIterations, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                            .addComponent(txtTolerance))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnExecCholesky)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExecCrout)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExecDooLittle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExecGauss)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addComponent(btnJacobi)
                .addGap(262, 262, 262))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExecCholesky)
                    .addComponent(btnJacobi)
                    .addComponent(btnExecCrout)
                    .addComponent(btnExecDooLittle)
                    .addComponent(btnExecGauss))
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtTolerance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtMaxIterations, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(136, 136, 136)
                .addComponent(btnExecute)
                .addContainerGap(187, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnExecCholeskyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExecCholeskyActionPerformed
        selectedMethod = "luCho";
        
    }//GEN-LAST:event_btnExecCholeskyActionPerformed

    private void btnExecuteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExecuteActionPerformed
        // TODO add your handling code here:
        String file = "";
        String args = "";
        if(selectedMethod.equals("jacobi")){
            file = "jacobi.py";
            String tolerance = txtTolerance.getText();
            String maxIters = txtMaxIterations.getText();

            args = tolerance + " " + maxIters;
            
        }
        BufferedReader [] std = executeCommand(file, args);  
        String s = null;
        try{
            boolean error=false;
            // read any errors from the attempted command
            while ((s = std[1].readLine()) != null) {
                JOptionPane.showMessageDialog(this,s,"Error",JOptionPane.ERROR_MESSAGE);
                error=true;
            }  
            // read the output from the command
            if(!error){
                System.out.println("Here is the standard output of the command:\n");
                while ((s = std[0].readLine()) != null) {
                    System.out.println(s);
                }
            }
        }
        catch (IOException e) {
            System.out.println("exception happened - here's what I know: ");
            e.printStackTrace();
            System.exit(-1);
        }
    }//GEN-LAST:event_btnExecuteActionPerformed

    private void btnJacobiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnJacobiActionPerformed
        selectedMethod = "jacobi";
    }//GEN-LAST:event_btnJacobiActionPerformed

    private void btnExecCroutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExecCroutActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnExecCroutActionPerformed

    private void btnExecDooLittleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExecDooLittleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnExecDooLittleActionPerformed

    private void btnExecGaussActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExecGaussActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnExecGaussActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExecCholesky;
    private javax.swing.JButton btnExecCrout;
    private javax.swing.JButton btnExecDooLittle;
    private javax.swing.JButton btnExecGauss;
    private javax.swing.JButton btnExecute;
    private javax.swing.JButton btnJacobi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField txtMaxIterations;
    private javax.swing.JTextField txtTolerance;
    // End of variables declaration//GEN-END:variables
}
